{"version":3,"file":"index.js","sources":["src/Subject.js"],"sourcesContent":["const OBSERVERS_PROPERTY = Symbol(\"Subject observers\")\nconst NAME_PROPERTY = Symbol(\"Subject event name\")\n\n/**\n * Asserts that an event name is valid.\n *\n * @param name\n *\n * @throws Error if `name` is not a string.\n */\nfunction assertNameIsValid(name)\n{\n\tif ('symbol' !== typeof name)\n\t{\n\t\tthrow new Error(\"Event name is not a symbol\")\n\t}\n}\n\n/**\n * Retrieve event name from an event constructor.\n *\n * @param {function} constructor\n *\n * @returns {string}\n *\n * @throws Error if `constructor` is not an event constructor.\n */\nfunction retrieveNameFromConstructor(constructor)\n{\n\tif ('function' !== typeof constructor  || !(NAME_PROPERTY in constructor))\n\t{\n\t\tthrow new Error(`Expecting an event instance, got: ${constructor}`)\n\t}\n\n\tconst name = constructor[NAME_PROPERTY]\n\n\tassertNameIsValid(name)\n\n\treturn name\n}\n\n/**\n * Retrieve event name from ab event instance.\n *\n * @param {object} event\n *\n * @returns {string}\n *\n * @throws Error if `event` is not an event instance.\n */\nfunction retrieveNameFromInstance(event)\n{\n\tif ('object' !== typeof event || !(NAME_PROPERTY in event.__proto__.constructor))\n\t{\n\t\tthrow new Error(\"Expected an Event instance\")\n\t}\n\n\tconst name = event.__proto__.constructor[NAME_PROPERTY]\n\n\tassertNameIsValid(name)\n\n\treturn name\n}\n\n/**\n * Return the observers array.\n *\n * @protected\n *\n * @param {Subject} subject\n * @param {string|null} name Event name, or `null` to get all observers.\n *\n * @return {Array}\n */\nfunction getObservers(subject, name) {\n\n\tif (!(OBSERVERS_PROPERTY in subject))\n\t{\n\t\tsubject[OBSERVERS_PROPERTY] = []\n\t}\n\n\tconst observers = subject[OBSERVERS_PROPERTY]\n\n\tif (!name)\n\t{\n\t\treturn observers\n\t}\n\n\tif (!(name in observers))\n\t{\n\t\tobservers[name] = []\n\t}\n\n\treturn observers[name]\n}\n\nexport default class\n{\n\t/**\n\t * Creates an event constructor given a name and a constructor.\n\t *\n\t * @param {function} constructor\n\t *\n\t * @returns {function}\n\t */\n\tstatic createEvent(constructor)\n\t{\n\t\tconstructor[NAME_PROPERTY] = Symbol(\"Event symbol\")\n\n\t\treturn constructor\n\t}\n\n\t/**\n\t * Attach an observer.\n\t *\n\t * @param {function} constructor Event constructor.\n\t * @param {function} callback\n\t *\n\t * @return {Subject}\n\t */\n\tobserve(constructor, callback)\n\t{\n\t\tconst symbol = retrieveNameFromConstructor(constructor)\n\t\tconst observers = getObservers(this, symbol)\n\n\t\tif (observers.indexOf(callback) !== -1)\n\t\t{\n\t\t\tthrow new Error(\"Observer already attached\", constructor)\n\t\t}\n\n\t\tobservers.push(callback)\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Detach an observer.\n\t *\n\t * @param {function} callback\n\t *\n\t * @return {Subject}\n\t */\n\tunobserve(callback)\n\t{\n\t\tconst observers = getObservers(this, null)\n\n\t\tfor (let type of Object.getOwnPropertySymbols(observers))\n\t\t{\n\t\t\tlet typeObservers = observers[type]\n\t\t\tlet k = typeObservers.indexOf(callback)\n\n\t\t\tif (k === -1)\n\t\t\t{\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\ttypeObservers.splice(k, 1)\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Notify observers of a change.\n\t *\n\t * @param {object} event\n\t *\n\t * @return {Subject}\n\t */\n\tnotify(event)\n\t{\n\t\tconst name = retrieveNameFromInstance(event)\n\t\tconst observers = getObservers(this, name)\n\n\t\tfor (let observer of observers)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tobserver.call(null, event)\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n}\n"],"names":[],"mappings":"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"}